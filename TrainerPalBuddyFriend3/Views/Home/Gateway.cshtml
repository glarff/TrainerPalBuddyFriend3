@model  List<Gateway>

@using (Ajax.BeginForm("GatewayForm", "Home", new AjaxOptions
{
    HttpMethod = "POST",
    UpdateTargetId = "id1",
    LoadingElementId = "LoadingImage",
    OnSuccess = "onSuccess_Message",
    OnFailure = "onFailure_Message"
}))
{
    <div class="zPageHead01">
        <button id="zAddBtn" type="button" class="btn btn-primary btn-lg" title="Add row" style="float:right; margin-right:20px; margin-top:45px">Add New Workout &raquo;</button>
        <h2>Workouts</h2>
        <p class="lead">
            Manage workouts.  Edit existing training sessions or create new ones.
        </p>
    </div>
    <div class="zPageBody01">
        <table id="myTbl">
            <tr>
                <th style="display:none">PK</th>
                <th style="width:180px">ID</th>
                <th style="width:275px">Name</th>
                <th style="width:400px">Description</th>
                <th style="width:95px">Warmup</th>
                <th style="width:85px">Edit</th>
                <th style="width:85px">Delete</th>
            </tr>
            @{ int i = 0; int j = 0; }
            @foreach (var r in Model)
            {
        <tr class="visibleRow">
            <td class="pk" style="display:none">@Html.TextBoxFor(m => m[i].Workoutpk)</td>
            <td class="zColumnSmaller">@Html.TextBoxFor(m => m[i].Workoutid)</td>
            <td>@Html.TextBoxFor(m => m[i].Name)</td>
            <td>@Html.TextAreaFor(m => m[i].Description)</td>
            <td>
                <label class="z1container">
                    <br />
                    @Html.CheckBoxFor(m => m[i].Iswarmupflg)
                    <span class="checkmark"></span>
                </label>
            </td>
            <td><button type="button" class="editbtn" title="Edit row">Edit</button></td>
            <td><button type="button" class="deletebtn" title="Remove row">X</button></td>
        </tr>
                i++;
            }

            @for (j = i; j < i + 20; j++)
            {
                // ugly solution until I can find something better that works
                // add invisible rows to handle additions
                var newWk = new Gateway();
                Model.Add(newWk);

        <tr class="hiddenRow">
            <td class="pk" style="display:none">@Html.TextBoxFor(m => m[j].Workoutpk)</td>
            <td class="zColumnSmaller">@Html.TextBoxFor(m => m[j].Workoutid)</td>
            <td>@Html.TextBoxFor(m => m[j].Name)</td>
            <td>@Html.TextAreaFor(m => m[j].Description)</td>
            <td>
                <label class="z1container">
                    <br />
                    @Html.CheckBoxFor(m => m[j].Iswarmupflg)
                    <span class="checkmark"></span>
                </label>
            </td>
            <td> <button type="button" class="editbtn" title="Edit row">Edit</button> </td>
            <td> <button type="button" class="deletebtn" title="Remove row">X</button> </td>
        </tr>
            }
        </table>
    </div>
    <div class="zPageFooter01">
        <input type="submit" class="btn btn-primary btn-lg" value="Save Changes" />
    </div>
}
