@model  List<Types>
<script scr="@Url.Content(" ~/Scripts/jquery-3.3.1.min.js")" type="text/javascript"></script>
<script scr="@Url.Content(" ~/Scripts/jquery.unobtrusive-ajax.js")" type="text/javascript"></script>
<script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min.js"></script>

<script>
    $(document).ready(function () {
        $('input[type="text"]').each(function(){
            $(this).prop('readonly', true);
            $(this).css('background-color', 'darkgrey');
        })
    });

    $(document).on('click', 'button.deletebtn', function () {
        $(this).closest('tr').hide();
        $(this).parent().siblings().children().val(0);
    });

    $(document).on('click', 'button.editbtn', function () {

        if ($(this).html() == 'Edit') {
            $(this).parent().siblings().children('input[type="text"]').prop('readonly', false);
            $(this).parent().siblings().children('input[type="text"]').css('background-color', 'white');
            $(this).html('Save');
        }
        else {
            $(this).parent().siblings().children('input[type="text"]').prop('readonly', true);
            $(this).parent().siblings().children('input[type="text"]').css('background-color', 'darkgrey');
            $(this).html('Edit');
        }
        
    });

    $(document).on('click', 'button.addbtn', function () {
        $('.hiddenRow:first').addClass('visibleRow');
        $('.hiddenRow:first').children(".pk").children().val(-1);
        $('.hiddenRow:first').children('input[type="text"]').children().prop('readonly', false);
        $('.hiddenRow:first').children('input[type="text"]').children().css('background-color', 'white');
        $('.hiddenRow:first').removeClass('hiddenRow');
    });
</script>

@using (Ajax.BeginForm("Form3", "Home", new AjaxOptions
{
    HttpMethod = "POST",
    UpdateTargetId = "id1",
    LoadingElementId = "LoadingImage",
    OnSuccess = "onSuccess_Message",
    OnFailure = "onFailure_Message"
}))
{
    <h2>Activity Types</h2>
    <button type="button" class="addbtn" title="Remove row">Add</button>
    <table id="myTbl" class="table table-condensed nestedtablewithactions" summary="Defined Types">
        <tr>
            <th style="display:none">PK</th>
            <th>ID</th>
            <th>Name</th>
            <th>Custom</th>
            <th>Edit</th>
            <th>Delete</th>
        </tr>
        @{ int i = 0;  int j = 0; }
        @foreach (var r in Model)
        {
            <tr class="visibleRow">
                <td class="pk" style="display:none">@Html.TextBoxFor(m => m[i].Typepk)</td>
                <td>@Html.TextBoxFor(m => m[i].Typeid)</td>
                <td>@Html.TextBoxFor(m => m[i].Name)</td>
                <td>@Html.TextBoxFor(m => m[i].Custom)</td>
                <td><button type="button" class="editbtn" title="Edit row">Edit</button></td>
                <td><button type="button" class="deletebtn" title="Remove row">X</button></td>
            </tr>
            i++;
        }

        @for (j = i; j < i + 20; j++)
        {
            // ugly solution until I can find something better that works
            // add invisible rows to handle additions
            var newTyp = new Types();
            Model.Add(newTyp);

            <tr class="hiddenRow">
                <td class="pk" style="display:none">@Html.TextBoxFor(m => m[j].Typepk)</td>
                <td>+ @Html.TextBoxFor(m => m[j].Typeid)</td>
                <td>@Html.TextBoxFor(m => m[j].Name)</td>
                <td>@Html.TextBoxFor(m => m[j].Custom)</td>
                <td> <button type="button" class="editbtn" title="Edit row" >Edit</button> </td>
                <td> <button type="button" class="deletebtn" title="Remove row">X</button> </td>
            </tr>
        }
        <tr name="submitRow">
            <td colspan="5"><input type="submit" value="Save Changes" /></td>
        </tr>
    </table>
}